name: Delete Canceled Workflow Runs

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 */3 * *'
  workflow_run:
    workflows: ["Update file_cache.json"]
    types:
      - completed

jobs:
  delete-canceled-runs:
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' || github.event_name != 'workflow_run' }}
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Delete canceled workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          delete_run_by_conclusion_pattern: 'cancelled'
          retain_days: 0
          baseUrl: "https://api.github.com"
          repository: ${{ github.repository }}
          keep_minimum_runs: 0  # Ensuring minimum runs doesn't prevent deletion

      - name: List all workflow runs
        id: list-runs
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const runs = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });
            const runsToDelete = runs.data.workflow_runs
              .filter(run => run.name === 'Delete Canceled Workflow Runs' && run.id !== context.runId)
              .map(run => run.id);
            core.setOutput('runs_to_delete', JSON.stringify(runsToDelete));

      - name: Delete previous workflow runs
        if: steps.list-runs.outputs.runs_to_delete != '[]'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const runsToDelete = JSON.parse(process.env.runs_to_delete);
            for (const runId of runsToDelete) {
              await github.rest.actions.deleteWorkflowRun({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: runId
              });
            }
        env:
          runs_to_delete: ${{ steps.list-runs.outputs.runs_to_delete }}
